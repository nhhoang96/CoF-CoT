what is the time in the mountain time zone	[IN:datetime_query [SL:time_zone mountain] ]	datetime	en-US	'(time-in :mod (mountain-time-zone) :op1 (what))'
tell me the time in moscow	[IN:datetime_query [SL:place_name moscow] ]	datetime	en-US	'(t / tell-01 \n      :ARG0 (u / you) \n      :ARG1 (t2 / time \n                  :mod (m / Moscow)))'
what train companies are near me	[IN:recommendation_locations [SL:business_type train companies] ]	recommendation	en-US	'(d / discover \n      :subject (I)\n      :object (companies\n                  :quant (train)\n                  :location (near :source (me))))'
train times for tomorrow	[IN:transport_query [SL:date tomorrow] ]	transport	en-US	'(train :time "tomorrow")'
get me a recipe for cookies	[IN:cooking_recipe [SL:food_type cookies] ]	cooking	en-US	"(get :ARG0 (you)\n     :ARG1 (recipe :ARG0-of (cookie)))\n     \nIn this AMR, 'get' is the main predicate and the subject is 'you'. 'recipe' represent the desired item and it is the object of 'get'. ':ARG0-of (cookie)' shows that the desired recipe is for cookies."
describe about it	[IN:general_quirky ]	general	en-US	'( describe\n     :topic it )'
set a remainder for twelve p. m. for lunch	[IN:calendar_set [SL:time twelve p. m.] [SL:meal_type lunch] ]	calendar	en-US	'(set-event :event (create :activity "set a remainder")\n            :time (create :time "twelve p. m.")\n            :for (create :activity "lunch"))'
post this message in facebook	[IN:social_post [SL:media_type facebook] ]	social	en-US	'(:event \n      :time-now \n      :ARG0 (you) \n      :ARG1 (:social-media-platform \n                  :name "facebook") \n      :ARG2 (message))'
add reminder today evening to collect the parcel from jakes bristo	[IN:calendar_set [SL:date today] [SL:timeofday evening] [SL:event_name collect the parcel] [SL:person jakes] [SL:place_name bristo] ]	calendar	en-US	'(c / remind\n      :time (tp / today-evening)\n      :ARG1 (p / person :name "I")\n      :ARG2 (c2 / collect\n              :ARG2 (p2 / parcel)\n              :from (o / organization :name "Jakes Bristo")))'
what is the weather like in brooklyn right now	[IN:weather_query [SL:place_name brooklyn] ]	weather	en-US	'(not (weather\n      :query "like"\n      :location (place\n                  :name "Brooklyn"\n                  :type "city")\n      :time (date-entity)))'
fun things to do today	[IN:recommendation_events [SL:event_name fun things] [SL:date today] ]	recommendation	en-US	'(c / fun \n      :time (t / today)\n      :activity (d / do \n                  :ARG0 (t2 / things)))'
please repeat that music again of akon	[IN:music_settings [SL:player_setting repeat] [SL:artist_name akon] ]	music	en-US	'(c / repeat-01\n      :arg0 (p / please)\n      :arg1 (m / music\n            :mod (a / again)\n            :artist "Akon"))'
the music volume should increase to ninety	[IN:audio_volume_up [SL:change_amount to ninety] ]	audio	en-US	'(c / increase-01 \n   :ARG1 (m / music)\n   :ARG2 90\n   :time (s / should))'
show me today all train times of next two hours at jodhpur to pali	[IN:transport_query [SL:date today] [SL:transport_type train] [SL:time next two hours] [SL:place_name jodhpur] [SL:place_name pali] ]	transport	en-US	'(c / command\n   :domain (d / date-entity :quant 2 :unit (h / hour))\n   :time (p / date-entity :time-of-day (s / time-entity :hour 0 :minute 0 :second 0))\n   :mode imperative\n   :subject (y / you)\n   :query (t / train\n             :destination (p2 / place :name "pali")\n             :source (j / place :name "jodhpur")\n             :time-range (d2 / date-entity :quant 2 :unit (h / hour))))'
please erase the next birthday event	[IN:calendar_remove [SL:event_name birthday] ]	calendar	en-US	'(e / erase-01\n      :ARG0 (y / you)\n      :ARG1 (e2 / event\n            :eventmod (n / next)\n            :instance-of (b / birthday)))'
clear the entire month of may	[IN:calendar_remove [SL:time may] ]	calendar	en-US	'(clear-01\n     :ARG1 (entire-02 :quant <3> :mod (month-03 :name "may")))'
