Has Angelika Kratzer video messaged me?	[IN:GET_MESSAGE [SL:CONTACT Angelika Kratzer ] [SL:TYPE_CONTENT video ] [SL:RECIPIENT me ] ]	[IN:GET_MESSAGE [SL:CONTACT Angelika Kratzer ] [SL:TYPE_CONTENT video ] [SL:RECIPIENT me ] ]	messaging	en_XX	(S1 / MESSAGING-VIDEO-1 \n :ARG1 (P / PERSON :name "Angelika Kratzer") \n :ARG2 (P2 / PERSON :ARG0-of (H / HAVE-PERSON-ROLE-91\n:ARG1 P \n :ARG2 (I / I)))
Maricopa County weather forecast for this week	[IN:GET_WEATHER [SL:LOCATION Maricopa County ] [SL:DATE_TIME for this week ] ]	[IN:GET_WEATHER [SL:LOCATION Maricopa County ] [SL:DATE_TIME for this week ] ]	weather	en_XX	(W / weather-forecast \n :ARG1 (C / county :name "Maricopa County") \n :ARG2 (T / time :opX-of W \n :quant (W2 / week \n :mod (T2 / this))))
When will my next alarm start	[IN:GET_ALARM [SL:ORDINAL next ] ]	[IN:GET_ALARM [SL:ORDINAL next ] ]	alarm	en_XX	(W / when \n :ARG1 (S / start-01 \n :ARG0 (N / next \n :ARG1 (A / alarm \n :ARG0-of (Y / you) \n :poss Y))))
text Matthew and Helen that are you free	[IN:SEND_MESSAGE [SL:RECIPIENT Matthew ] [SL:RECIPIENT Helen ] [SL:CONTENT_EXACT are you free ] ]	[IN:SEND_MESSAGE [SL:RECIPIENT Matthew ] [SL:RECIPIENT Helen ] [SL:CONTENT_EXACT are you free ] ]	messaging	en_XX	(t / text-01 \n :ARG0 (Y / you) \n :ARG1 (a / and \n :op1 (p / person \n :name (m / name \n :op1 "Matthew")) \n :op2 (p2 / person \n :name (h / name \n :op1 "Helen"))) \n :ARG2 (f / free))
what  ingredients do is have left	[IN:GET_INFO_RECIPES [SL:RECIPES_ATTRIBUTE ingredients ] ]	[IN:GET_INFO_RECIPES [SL:RECIPES_ATTRIBUTE ingredients ] ]	recipes	en_XX	(d / do-02 \n :ARG1 (h / have-03 \n :ARG0 (i / it) \n :ARG2 (l / left)) \n :ARG2 (i2 / ingredient \n :ARG1 (w / what)))
I am no longer available	[IN:SET_UNAVAILABLE ]	[IN:SET_UNAVAILABLE ]	calling en_XX	(a / available \n :polarity - \n :ARG0 (i / I) \n :time (n / now))
Cancel my reminder about my dentist appointment	[IN:DELETE_REMINDER [SL:PERSON_REMINDED my ] [SL:TODO my dentist appointment ] ]	[IN:DELETE_REMINDER [SL:PERSON_REMINDED my ] [SL:TODO my dentist appointment ] ]	reminder	en_XX	(c / cancel-01 \n :ARG0 (i / I) \n :ARG1 (r / reminder \n :ARG0-of (a / about \n :ARG1 (a2 / appointment \n :ARG1-of (d / dentist)))))
I would like a news update.	[IN:GET_STORIES_NEWS [SL:NEWS_TYPE news ] ]	[IN:GET_STORIES_NEWS [SL:NEWS_TYPE news ] ]	news	en_XX	(w / want-01 \n :ARG0 (i / I) \n :ARG1 (n / news \n :ARG0-of (u / update)))
Read Health newreport please	[IN:GET_STORIES_NEWS [SL:NEWS_CATEGORY Health ] [SL:NEWS_TYPE newreport ] ]	[IN:GET_STORIES_NEWS [SL:NEWS_CATEGORY Health ] [SL:NEWS_TYPE newreport ] ]	news	en_XX	(r / read-01 \n :ARG0 (i / i) \n :ARG1 (n / newreport \n :mod (h / health)) \n :ARG2 (p / please))
Set alarm	[IN:CREATE_ALARM ]	[IN:CREATE_ALARM ]	alarm	en_XX	(s / set-01 \n :ARG1 (a / alarm))
