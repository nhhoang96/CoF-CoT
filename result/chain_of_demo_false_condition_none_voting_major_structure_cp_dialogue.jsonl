[
    {
        "utterance": "call Nicholas and Natasha",
        "intent": "create_call",
        "AMR Graph": "(S (VP (VB call) (NP (NNP Nicholas) (CC and) (NNP Natasha))))",
        "key_phrase": "Nicholas, Natasha",
        "slot_type": "(contact, Nicholas), (contact, Natasha)",
        "pred_lf": "[IN:create_call [SL:contact Nicholas] [SL:contact Natasha]]",
        "gold_lf": "[IN:CREATE_CALL [SL:CONTACT Nicholas ] [SL:CONTACT Natasha ] ]"
    },
    {
        "utterance": "Give me the most recent NPR news",
        "intent": "question_news",
        "AMR Graph": "(S (VP (VB Give) (NP (PRP me) (NP (DT the) (RBS most) (JJ recent) (NN NPR) (NN news))))))",
        "key_phrase": "NPR news, most recent, me",
        "slot_type": "(news_source, NPR news), (ordinal, most recent), (O, me)",
        "pred_lf": "[IN: question_news [SL: news_source NPR news] [SL: ordinal most recent] [SL: O me]]",
        "gold_lf": "[IN:GET_STORIES_NEWS [SL:DATE_TIME the most recent ] [SL:NEWS_SOURCE NPR ] [SL:NEWS_TYPE news ] ]"
    },
    {
        "utterance": "What's the work address with zipcode where James work?",
        "intent": "get_location",
        "AMR Graph": "(S (SBARQ (WHNP (What))\n           (SQ (VBZ 's)\n               (NP (DT the) (NN work) (NN address)\n                   (PP (IN with)\n                       (NP (NNP zipcode)))))\n           (WHADVP (WRB where))\n           (NP (NNP James))\n           (VP (VBZ work)))\n     (. ?)))",
        "key_phrase": "work address, zipcode, James, work",
        "slot_type": "(location, work address), (location, zipcode), (person_reminded, James), (job, work)",
        "pred_lf": "[IN:get_location [SL:location work address] [SL:location zipcode] [SL:person_reminded James] [SL:job work]]",
        "gold_lf": "[IN:GET_LOCATION [SL:CONTACT James ] ]"
    },
    {
        "utterance": "ring my brother",
        "intent": "create_call",
        "AMR Graph": "(S (VP (VB Ring) (NP (PRP$ my) (NN brother))))",
        "key_phrase": "ring, my brother",
        "slot_type": "(O, ring), (contact_related, my brother)",
        "pred_lf": "[IN:create_call [SL:O ring] [SL:contact_related my brother]]",
        "gold_lf": "[IN:CREATE_CALL [SL:CONTACT my brother ] ]"
    },
    {
        "utterance": "set a timer for my workout right now",
        "intent": "create_timer",
        "AMR Graph": "(S (VP (VB set) (NP (DT a) (NN timer)) (PP (IN for) (NP (PRP$ my) (NN workout)))) (ADVP (RB right) (RB now)))",
        "key_phrase": "set a timer, my workout, right now",
        "slot_type": "(method_timer, set a timer), (todo, my workout), (O, right now)",
        "pred_lf": "[IN:create_timer [SL:method_timer set a timer] [SL:todo my workout] [SL:O right now]]",
        "gold_lf": "[IN:CREATE_TIMER [SL:METHOD_TIMER timer ] [SL:TIMER_NAME workout ] ]"
    },
    {
        "utterance": "call Camilla whatsapp video",
        "intent": "create_call",
        "AMR Graph": "(S (VP (VB call) (NP (NNP Camilla) (NP (NN whatsapp) (NN video)))))",
        "key_phrase": "call Camilla, whatsapp video",
        "slot_type": "(contact, call Camilla), (contact_method, whatsapp video)",
        "pred_lf": "[IN:create_call [SL:contact call Camilla] [SL:contact_method whatsapp video]]",
        "gold_lf": "[IN:CREATE_CALL [SL:CONTACT Camilla ] [SL:NAME_APP whatsapp ] ]"
    },
    {
        "utterance": "call Avery M",
        "intent": "create_call",
        "AMR Graph": "(S (NP (V call) (NP (NNP Avery)) (NNP M)))",
        "key_phrase": "call Avery M, Avery M",
        "slot_type": "(phone_number, Avery M), (todo, call Avery M)",
        "pred_lf": "[IN:create_call [SL:phone_number Avery M] [SL:todo call Avery M]]",
        "gold_lf": "[IN:CREATE_CALL [SL:CONTACT Avery M ] ]"
    },
    {
        "utterance": "what is the next alarm for",
        "intent": "get_alarm",
        "AMR Graph": "(S\n   (SBAR\n      (WHNP (WP what))\n      (S\n         (VP (VBZ is)\n             (NP (DT the) (JJ next) (NN alarm))\n             (PP (IN for))))))",
        "key_phrase": "next alarm, for",
        "slot_type": "(alarm_name, next alarm), (O, for)",
        "pred_lf": "[IN:get_alarm [SL:alarm_name next alarm] [SL:O for]]",
        "gold_lf": "[IN:GET_ALARM [SL:ORDINAL next ] ]"
    },
    {
        "utterance": "Recommend me some Broadway shows in Anchorage for Thursday night",
        "intent": "question_music",
        "AMR Graph": "(S\n  (VP (VB Recommend)\n    (NP (PRP me))\n    (NP\n      (DT some)\n      (JJ Broadway)\n      (NNS shows)\n      (PP (IN in)\n        (NP (NNP Anchorage))))\n    (PP (IN for)\n      (NP\n        (NNP Thursday)\n        (NN night)))))\n",
        "key_phrase": "Broadway shows, Anchorage, Thursday night",
        "slot_type": "(title_event, Broadway shows), (location, Anchorage), (date_time, Thursday night)",
        "pred_lf": "[IN:question_music [SL:title_event Broadway shows] [SL:location Anchorage] [SL:date_time Thursday night]]",
        "gold_lf": "[IN:GET_EVENT [SL:CATEGORY_EVENT Broadway shows ] [SL:LOCATION Anchorage ] [SL:DATE_TIME for Thursday night ] ]"
    },
    {
        "utterance": "What's news about facebook this week",
        "intent": "question_news",
        "AMR Graph": "(S\n  (SBARQ\n    (WHNP (What))\n    (SQ (VBZ 's) (NP (NN news)) (PP (IN about) (NP (NNP facebook) (DT this) (NN week))))))",
        "key_phrase": "news, facebook, this week",
        "slot_type": "(news_topic, news), (news_reference, facebook), (date_time, this week)",
        "pred_lf": "[IN: question_news [SL: news_topic news] [SL: news_reference facebook] [SL: date_time this week]]",
        "gold_lf": "[IN:GET_STORIES_NEWS [SL:NEWS_TYPE news ] [SL:NEWS_TOPIC facebook ] [SL:DATE_TIME this week ] ]"
    },
    {
        "utterance": "can you set a warning alarm for 7pm",
        "intent": "create_alarm",
        "AMR Graph": "(S (VP (MD can) (NP (PRP you)) (VP (VB set) (NP (DT a) (NN warning) (NN alarm)) (PP (IN for) (NP (CD 7) (NN pm))))))",
        "key_phrase": "warning alarm, 7pm",
        "slot_type": "(alarm_name, warning alarm), (date_time, 7pm)",
        "pred_lf": "[IN:create_alarm [SL:alarm_name warning alarm] [SL:date_time 7pm]]",
        "gold_lf": "[IN:CREATE_ALARM [SL:ALARM_NAME warning ] [SL:DATE_TIME for 7 pm ] ]"
    },
    {
        "utterance": "Tell me about events going on in Crandon this weekend",
        "intent": "get_event",
        "AMR Graph": "(S\n  (VP\n    (VB Tell)\n    (NP\n      (PRP me)\n      (PP\n        (IN about)\n        (NP\n          (NP (NNS events))\n          (VP\n            (VBG going)\n            (PRT (RP on))\n            (PP\n              (IN in)\n              (NP (NNP Crandon)))\n            (NP\n              (DT this)\n              (NN weekend))))))))",
        "key_phrase": "events, Crandon, weekend",
        "slot_type": "location, Crandon\ndate_time, weekend\ntitle_event, events",
        "pred_lf": "[IN:get_event [SL:location Crandon] [SL:date_time weekend] [SL:title_event events]]",
        "gold_lf": "[IN:GET_EVENT [SL:LOCATION Crandon ] [SL:DATE_TIME this weekend ] ]"
    },
    {
        "utterance": "make one timer for four minutes and another for 10 minutes",
        "intent": "create_timer",
        "AMR Graph": "(S (VP (VB make)\n      (NP (CD one)\n          (NN timer)\n          (PP (IN for)\n              (NP (CD four)\n                  (NNS minutes)))))\n   (CC and)\n   (NP (DT another)\n       (NN timer)\n       (PP (IN for)\n           (NP (CD 10)\n               (NNS minutes))))))",
        "key_phrase": "one timer, four minutes, another timer, 10 minutes",
        "slot_type": "(method_timer, one timer), (recipes_unit_measurement, four minutes), (method_timer, another timer), (recipes_unit_measurement, 10 minutes)",
        "pred_lf": "[IN:create_timer [SL:method_timer one timer] [SL:recipes_unit_measurement four minutes] [SL:method_timer another timer] [SL:recipes_unit_measurement 10 minutes]]",
        "gold_lf": "[IN:CREATE_TIMER [SL:AMOUNT one ] [SL:METHOD_TIMER timer ] [SL:DATE_TIME for four minutes ] [SL:DATE_TIME for 10 minutes ] ]"
    },
    {
        "utterance": "How do I prepare spaghetti",
        "intent": "get_info_recipes",
        "AMR Graph": "(S\n    (SBARQ\n        (WHADVP\n            (WRB How))\n        (SQ\n            (VBP do)\n            (NP\n                (PRP I))\n            (VP\n                (VB prepare)\n                (NP\n                    (NN spaghetti))))))",
        "key_phrase": "I, prepare spaghetti",
        "slot_type": "(O, I), (recipes_dish, spaghetti), (method_recipes, prepare)",
        "pred_lf": "[IN:get_info_recipes [SL: recipes_dish spaghetti] [SL: method_recipes prepare]]",
        "gold_lf": "[IN:GET_RECIPES [SL:RECIPES_DISH spaghetti ] ]"
    },
    {
        "utterance": "mark me as not going to Olympic Peninsula Apple and Cider Festival",
        "intent": "set_rsvp_no",
        "AMR Graph": "(S (VP (VB Mark) (NP (PRP me)) (PP (IN as) (S (VP (RB not) (VP (VBG going) (PP (TO to) (NP (NNP Olympic) (NNP Peninsula) (NNP Apple) (CC and) (NNP Cider) (NNP Festival)))))))))",
        "key_phrase": "Mark, me, not going, Olympic Peninsula, Apple and Cider Festival",
        "slot_type": "(user_attendee_event, Mark), (O, me), (group, not going), (location, Olympic Peninsula Apple and Cider Festival)",
        "pred_lf": "[IN:set_rsvp_no [SL:user_attendee_event Mark] [SL:O me] [SL:group not going] [SL:location Olympic Peninsula Apple and Cider Festival]]",
        "gold_lf": "[IN:SET_RSVP_NO [SL:TITLE_EVENT Olympic Peninsula Apple and Cider Festival ] ]"
    },
    {
        "utterance": "tell mark to pick up our to go order from olive garden",
        "intent": "None of the intents in the provided vocabulary accurately match the given sentence. The sentence appears to be a command or request for someone to perform an action, rather than a request for information or a specific task to be completed. As such, it does not fit neatly into any of the provided intent types.",
        "AMR Graph": "(S (VP (VB tell) \n         (NP (NNP mark)) \n         (S (VP (TO to) \n                (VP (VB pick) \n                    (PRT (RP up)) \n                    (NP (PRP$ our) \n                        (PRT (TO to) \n                             (NP (NN go) \n                                 (NN order))))))))) \n   (PP (IN from) \n       (NP (NNP Olive) (NNP Garden))))",
        "key_phrase": "mark, pick up, our to go order, Olive Garden.",
        "slot_type": "(O, tell), (person_reminded, mark), (method_retrieval_reminder, pick up), (recipes_dish, to go order), (location, Olive Garden)",
        "pred_lf": "[IN:command [SL:person_reminded mark] [SL:method_retrieval_reminder pick up] [SL:recipes_dish to go order] [SL:location Olive Garden]]",
        "gold_lf": "[IN:SEND_MESSAGE [SL:RECIPIENT mark ] [SL:CONTENT_EXACT pick up our to go order from olive garden ] ]"
    },
    {
        "utterance": "Set my alarm for 21st of May at 5 am.",
        "intent": "create_alarm",
        "AMR Graph": "(S (NP (VBN Set) (NP (PRP$ my) (NN alarm))) (PP (IN for) (NP (NP (DATE 21st) (IN of) (NNP May)) (PP (IN at) (NP (CD 5) (NN am))))))",
        "key_phrase": "my alarm, 21st of May, 5 am",
        "slot_type": "(alarm_name, my alarm), (date_time, 21st of May at 5 am)",
        "pred_lf": "[IN:create_alarm [SL:alarm_name my alarm] [SL:date_time 21st of May at 5 am]]",
        "gold_lf": "[IN:CREATE_ALARM [SL:DATE_TIME for 21st of May at 5 am ] ]"
    },
    {
        "utterance": "call on whatsapp Zachary Adkins",
        "intent": "create_call",
        "AMR Graph": "(S (VP (V call) (PP (P on) (NP (NP (N whatsapp)) (NP (N Zachary) (N Adkins))))))",
        "key_phrase": "whatsapp, Zachary Adkins",
        "slot_type": "(contact_method, whatsapp), (person_reminded, Zachary Adkins)",
        "pred_lf": "[IN:create_call [SL:contact_method whatsapp] [SL:person_reminded Zachary Adkins]]",
        "gold_lf": "[IN:CREATE_CALL [SL:NAME_APP whatsapp ] [SL:CONTACT Zachary Adkins ] ]"
    },
    {
        "utterance": "Is it below 47 in F at New York today",
        "intent": "get_weather",
        "AMR Graph": "(S (SBAR (IN Is) (S (NP (PRP it)) (VP (ADVP (RB below)) (NP (CD 47)) (PP (IN in) (NP (NNP F))))) (VP (VBZ at) (NP (NNP New) (NNP York))) (ADVP (RB today))))",
        "key_phrase": "New York today, below 47 in F",
        "slot_type": "(location, New York today), (weather_temperature_unit, F), (attribute_event, below), (weather_attribute, today)",
        "pred_lf": "[IN:get_weather [SL:location New York today] [SL:weather_temperature_unit F] [SL:attribute_event below] [SL:weather_attribute today]]",
        "gold_lf": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE below ] [SL:WEATHER_ATTRIBUTE 47 ] [SL:WEATHER_TEMPERATURE_UNIT F ] [SL:LOCATION New York ] [SL:DATE_TIME today ] ]"
    },
    {
        "utterance": "Did my Mom send me a message this week?",
        "intent": "get_message_contact",
        "AMR Graph": "(S (VP (VBD Did) (NP (PRP$ my) (NN Mom)) (VP (VB send) (NP (PRP me)) (NP (DT a) (NN message)) (NP (DT this) (NN week)))))",
        "key_phrase": "Mom, send message, this week",
        "slot_type": "contact, Mom\ntype_relation, send message\ndate_time, this week",
        "pred_lf": "[IN:get_message_contact [SL:contact Mom] [SL:type_relation send message] [SL:date_time this week]]",
        "gold_lf": "[IN:GET_MESSAGE [SL:SENDER my Mom ] [SL:RECIPIENT me ] [SL:DATE_TIME this week ] ]"
    },
    {
        "utterance": "What kind of event is Pumpkin Run?",
        "intent": "get_category_event",
        "AMR Graph": "(S (NP (WP What) (NN kind) (IN of) (NN event)) (VP (VBZ is) (NP (NNP Pumpkin) (NNP Run))) (. ?))",
        "key_phrase": "event, Pumpkin Run",
        "slot_type": "(title_event, Pumpkin Run), (category_event, event)",
        "pred_lf": "[IN:get_category_event [SL:title_event Pumpkin Run] [SL:category_event event]]",
        "gold_lf": "[IN:GET_CATEGORY_EVENT [SL:TITLE_EVENT Pumpkin Run ] ]"
    },
    {
        "utterance": "reset alarm for 7am on Sunday morning",
        "intent": "update_alarm",
        "AMR Graph": "(S (VP (VB reset) (NP (NN alarm) (PP (IN for) (NP (NP (CD 7) (NN am)) (PP (IN on) (NP (NNP Sunday) (NN morning)))))))))",
        "key_phrase": "reset alarm, 7am, Sunday morning",
        "slot_type": "(todo, reset alarm), (date_time, 7am), (date_time, Sunday morning)",
        "pred_lf": "[IN:update_alarm [SL:todo reset alarm] [SL:date_time 7am] [SL:date_time Sunday morning]]",
        "gold_lf": "[IN:CREATE_ALARM [SL:DATE_TIME for 7 am on Sunday morning ] ]"
    },
    {
        "utterance": "Find a recipe for jerk chicken",
        "intent": "get_recipes",
        "AMR Graph": "(S (VP (VB Find) (NP (DT a) (NN recipe) (PP (IN for) (NP (NN jerk) (NN chicken))))))",
        "key_phrase": "recipe, jerk chicken",
        "slot_type": "(recipes_dish, jerk chicken), (recipes_type, recipe)",
        "pred_lf": "[IN:get_recipes [SL:recipes_dish jerk chicken] [SL:recipes_type recipe]]",
        "gold_lf": "[IN:GET_RECIPES [SL:RECIPES_DISH jerk chicken ] ]"
    },
    {
        "utterance": "play destiny's child",
        "intent": "play_music",
        "AMR Graph": "(S (VP (VB play) (NP (NP (NN destiny's) (NN child)))))",
        "key_phrase": "play, destiny's child",
        "slot_type": "(music_track_title, destiny's child), (music_type, play)",
        "pred_lf": "[IN:play_music [SL:music_track_title destiny's child] [SL:music_type play]]",
        "gold_lf": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME destiny 's child ] ]"
    },
    {
        "utterance": "make an alarm for the 5th",
        "intent": "create_alarm",
        "AMR Graph": "(S (VP (VB make) (NP (DT an) (NN alarm) (PP (IN for) (NP (DT the) (CD 5th))))))",
        "key_phrase": "alarm, 5th",
        "slot_type": "(alarm_name, alarm), (ordinal, 5th)",
        "pred_lf": "[IN:create_alarm [SL:alarm_name alarm] [SL:ordinal 5th]]",
        "gold_lf": "[IN:CREATE_ALARM [SL:DATE_TIME for the 5th ] ]"
    },
    {
        "utterance": "Set an alarm for Monday at 5pm",
        "intent": "create_alarm",
        "AMR Graph": "(S (VP (VB Set) (NP (DT an) (NN alarm))) (PP (IN for) (NP (NNP Monday) (PP (IN at) (NP (CD 5) (NN pm))))))",
        "key_phrase": "Set an alarm, Monday, 5pm.",
        "slot_type": "(todo, Set an alarm), (date_time, Monday at 5pm)",
        "pred_lf": "[IN:create_alarm [SL:todo Set an alarm] [SL:date_time Monday at 5pm]]",
        "gold_lf": "[IN:CREATE_ALARM [SL:DATE_TIME for Monday at 5 pm ] ]"
    },
    {
        "utterance": "When did Lisa's employment at Publix finish?",
        "intent": "get_employment_time",
        "AMR Graph": "(S (SBAR (WHADVP (WRB When)) (S (VP (VBD did) (NP (NP (NNP Lisa)'s) (NN employment)) (PP (IN at) (NP (NNP Publix))))) (VP (VB finish))) (. ?)))",
        "key_phrase": "Lisa's employment, Publix, finish",
        "slot_type": "(job, Lisa's employment), (location, Publix), (O, finish)",
        "pred_lf": "[IN:get_employment_time [SL:job Lisa's employment] [SL:location Publix] [SL:O finish]]",
        "gold_lf": "[IN:GET_EMPLOYMENT_TIME [SL:CONTACT Lisa ] [SL:EMPLOYER Publix ] ]"
    },
    {
        "utterance": "What's Larry's work address?",
        "intent": "get_location",
        "AMR Graph": "(S (SBARQ \n    (WHNP (WP What's))\n    (SQ \n        (NP \n            (NP (POS Larry's) (NN work))\n            (NN address))\n        (. ?))))",
        "key_phrase": "Larry's work address",
        "slot_type": "(contact, Larry) , (job, work) , (location, address)",
        "pred_lf": "[IN:get_location [SL:contact Larry] [SL:job work] [SL:location address]]",
        "gold_lf": "[IN:GET_LOCATION [SL:CONTACT Larry ] ]"
    },
    {
        "utterance": "Does Rachel live in Avon?",
        "intent": "get_location",
        "AMR Graph": "(S (SQ (VBP Does) (NP (NNP Rachel)) (VP (VB live) (PP (IN in) (NP (NNP Avon)))) (? ?)))",
        "key_phrase": "Rachel, live, Avon",
        "slot_type": "(person_reminded, Rachel), (method_retrieval_reminder, live), (location, Avon)",
        "pred_lf": "[IN:get_location [SL:person_reminded Rachel] [SL:method_retrieval_reminder live] [SL:location Avon]]",
        "gold_lf": "[IN:GET_LOCATION [SL:CONTACT Rachel ] [SL:LOCATION Avon ] ]"
    },
    {
        "utterance": "What method of cooking is better",
        "intent": "question_music",
        "AMR Graph": "(S (NP (WP What)) (VP (VBZ method) (PP (IN of) (NP (NN cooking)))) (VP (VBZ is) (ADJP (JJR better))))",
        "key_phrase": "method of cooking, better",
        "slot_type": "(recipes_cooking_method, method of cooking), (O, better)",
        "pred_lf": "[IN:question_music [SL:recipes_cooking_method method of cooking] [SL:O better]]",
        "gold_lf": "[IN:GET_INFO_RECIPES ]"
    },
    {
        "utterance": "what is the weather in New York today?",
        "intent": "get_weather",
        "AMR Graph": "(S (SBAR (WHNP (WP what)) (S (VP (VBZ is) (NP (DT the) (NN weather)) (PP (IN in) (NP (NNP New) (NNP York)))))) (NP (NN today)) (. ?))",
        "key_phrase": "the weather in New York, New York today",
        "slot_type": "(location, the weather in New York), (date_time, New York today)",
        "pred_lf": "[IN:get_weather [SL:location the weather in New York] [SL:date_time New York today]]",
        "gold_lf": "[IN:GET_WEATHER [SL:LOCATION New York ] [SL:DATE_TIME today ] ]"
    },
    {
        "utterance": "add camille to call",
        "intent": "create_call",
        "AMR Graph": "(S (VP (VB add) (NP (NNP camille)) (PP (TO to) (NP (NN call)))))",
        "key_phrase": "camille, call",
        "slot_type": "(group, camille), (todo, call)",
        "pred_lf": "[IN:create_call [SL:group camille] [SL:todo call]]",
        "gold_lf": "[IN:UPDATE_CALL [SL:CONTACT_ADDED camille ] ]"
    },
    {
        "utterance": "How to make gluten free pancakes",
        "intent": "get_recipes",
        "AMR Graph": "(S (NP (WDT How)) (VP (TO to) (VP (VB make) (NP (JJ gluten) (JJ free) (NNS pancakes))))))",
        "key_phrase": "gluten free pancakes",
        "slot_type": "recipes_diet, gluten free pancakes",
        "pred_lf": "[IN:get_recipes [SL:recipes_diet gluten free pancakes]]",
        "gold_lf": "[IN:GET_RECIPES [SL:RECIPES_TYPE gluten free ] [SL:RECIPES_DISH pancakes ] ]"
    },
    {
        "utterance": "Pause the timer.",
        "intent": "pause_timer",
        "AMR Graph": "(S (VP (VB Pause) (NP (DT the) (NN timer))))",
        "key_phrase": "Pause the timer, timer, the timer",
        "slot_type": "(method_timer, Pause the timer), (method_timer, timer), (method_timer, the timer)",
        "pred_lf": "[IN:pause_timer [SL:method_timer Pause the timer] [SL:method_timer timer] [SL:method_timer the timer]]",
        "gold_lf": "[IN:PAUSE_TIMER [SL:METHOD_TIMER timer ] ]"
    },
    {
        "utterance": "remind rex to set up the meeting time",
        "intent": "create_reminder",
        "AMR Graph": "(S (VP \n     (VB remind) \n     (NP \n         (NP (NNP rex)) \n         (S \n             (VP (TO to) \n                 (VP (VB set) \n                     (PRT (RP up)) \n                     (NP (DT the) (NN meeting) (NN time))))))))",
        "key_phrase": "rex, set up, meeting time",
        "slot_type": "(user_attendee_event, rex), (method_timer, set up), (title_event, meeting time)",
        "pred_lf": "[IN:create_reminder [SL:user_attendee_event rex] [SL:method_timer set up] [SL:title_event meeting time]]",
        "gold_lf": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED rex ] [SL:TODO set up the meeting time ] ]"
    },
    {
        "utterance": "Can I wear sandals today?",
        "intent": "get_weather",
        "AMR Graph": "(S (Q (V Can)) (NP (PR I)) (VP (V wear) (NP (N sandals))) (AdvP (Adv today)) (Punc ?))",
        "key_phrase": "sandals, today",
        "slot_type": "(location, sandals), (date_time, today)",
        "pred_lf": "[IN:get_weather [SL:location sandals] [SL:date_time today]]",
        "gold_lf": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE sandals ] [SL:DATE_TIME today ] ]"
    },
    {
        "utterance": "Add aunties to current call",
        "intent": "update_call",
        "AMR Graph": "(S (VP (VB Add) (NP (NNS aunties)) (PP (TO to) (NP (JJ current) (NN call)))))",
        "key_phrase": "aunties, current call",
        "slot_type": "(group, aunties), (type_relation, current call)",
        "pred_lf": "[IN:update_call [SL:group aunties] [SL:type_relation current call]]",
        "gold_lf": "[IN:UPDATE_CALL [SL:CONTACT_ADDED aunties ] ]"
    },
    {
        "utterance": "where will american federal aid be sent to",
        "intent": "question_news",
        "AMR Graph": "(S (SBARQ (WHADVP (WRB where))\n    (SQ (MD will)\n        (NP (JJ american)\n            (JJ federal)\n            (NN aid))\n        (VP (VB be)\n            (VP (VBN sent)\n                (PP (TO to)))))))\n                \nNote: This is just one possible constituency parsing tree for this sentence, as there can be multiple correct ways of parsing a sentence depending on the parsing algorithm used.",
        "key_phrase": "American federal aid, be sent, to.",
        "slot_type": "(O, American federal aid), (method_retrieval_reminder, be sent), (location, to)",
        "pred_lf": "[IN:question_news [SL:O American federal aid] [SL:method_retrieval_reminder be sent] [SL:location to]]",
        "gold_lf": "[IN:QUESTION_NEWS [SL:NEWS_TOPIC where will american federal aid be sent to ] ]"
    },
    {
        "utterance": "get me messages from Angela",
        "intent": "get_message_contact",
        "AMR Graph": "(S (VP (VB get) (NP (PRP me) (NP (NNS messages) (PP (IN from) (NP (NNP Angela)))))))",
        "key_phrase": "messages, Angela",
        "slot_type": "(todo, messages), (contact, Angela)",
        "pred_lf": "[IN:get_message_contact [SL:todo messages] [SL:contact Angela]]",
        "gold_lf": "[IN:GET_MESSAGE [SL:SENDER Angela ] ]"
    },
    {
        "utterance": "Temperature this weekend new york fahrenheit",
        "intent": "get_weather",
        "AMR Graph": "(S (NP (NN Temperature) (DT this) (NN weekend) (NNP new) (NNP york)) (VP (VBZ is) (NP (NN fahrenheit)))))",
        "key_phrase": "Temperature, this weekend, New York, Fahrenheit",
        "slot_type": "(weather_temperature_unit, Temperature), (date_time, this weekend), (location, New York), (weather_temperature_unit, Fahrenheit)",
        "pred_lf": "[IN:get_weather [SL:weather_temperature_unit Temperature] [SL:date_time this weekend] [SL:location New York] [SL:weather_temperature_unit Fahrenheit]]",
        "gold_lf": "[IN:GET_WEATHER [SL:DATE_TIME this weekend ] [SL:LOCATION new york ] [SL:WEATHER_TEMPERATURE_UNIT fahrenheit ] ]"
    },
    {
        "utterance": "How many kids got arrested",
        "intent": "question_news",
        "AMR Graph": "(S (SBAR (WHADVP (WRB How)) (S (NP (JJ many) (NNS kids)) (VP (VBD got) (VP (VBN arrested))))))",
        "key_phrase": "kids, got arrested",
        "slot_type": "(O, kids), (O, got arrested)",
        "pred_lf": "[IN:question_news [SL:O kids] [SL:O got arrested]]",
        "gold_lf": "[IN:QUESTION_NEWS [SL:NEWS_TOPIC kids got arrested ] ]"
    },
    {
        "utterance": "Show new messages",
        "intent": "get_message",
        "AMR Graph": "(S (VP (VB Show) (NP (JJ new) (NNS messages))))",
        "key_phrase": "new messages",
        "slot_type": "(type_content, new messages)",
        "pred_lf": "[IN:get_message [SL:type_content new messages]]",
        "gold_lf": "[IN:GET_MESSAGE ]"
    },
    {
        "utterance": "Remind me to take dinner to Lori on Friday.",
        "intent": "create_reminder",
        "AMR Graph": "(S (NP (PRON Remind) (PRON me)) (VP (TO to) (VP (VB take) (NP (NN dinner)) (PP (TO to) (NP (NNP Lori)))) (PP (IN on) (NP (NNP Friday)))))",
        "key_phrase": "take dinner to Lori, on Friday",
        "slot_type": "(todo, remind me to take dinner to Lori), (date_time, on Friday)",
        "pred_lf": "[IN:create_reminder [SL:todo remind me to take dinner to Lori] [SL:date_time on Friday]]",
        "gold_lf": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED me ] [SL:TODO take dinner to Lori ] [SL:DATE_TIME on Friday ] ]"
    },
    {
        "utterance": "Show my spa reminders with my mom next month.",
        "intent": "get_reminder",
        "AMR Graph": "(S\n  (VP\n    (VB Show)\n    (NP\n      (PRP$ my)\n      (NN spa)\n      (NNS reminders)))\n    (PP\n      (IN with)\n      (NP\n        (PRP$ my)\n        (NN mom))))\n    (NP\n      (JJ next)\n      (NN month))))",
        "key_phrase": "spa reminders, my mom, next month",
        "slot_type": "(todo, spa reminders), (user_attendee_event, my mom), (date_time, next month)",
        "pred_lf": "[IN:get_reminder [SL:todo spa reminders] [SL:user_attendee_event my mom] [SL:date_time next month]]",
        "gold_lf": "[IN:GET_REMINDER [SL:METHOD_RETRIEVAL_REMINDER Show ] [SL:PERSON_REMINDED my ] [SL:TODO spa ] [SL:TODO with my mom ] [SL:DATE_TIME next month ] ]"
    },
    {
        "utterance": "Michigan crime reports",
        "intent": "question_news",
        "AMR Graph": "(S (NP Michigan) (NP crime reports))",
        "key_phrase": "Michigan, crime reports",
        "slot_type": "(location, Michigan), (category_event, crime reports)",
        "pred_lf": "[IN:question_news [SL:location Michigan] [SL:category_event crime reports]]",
        "gold_lf": "[IN:GET_STORIES_NEWS [SL:NEWS_TOPIC Michigan crime ] [SL:NEWS_TYPE reports ] ]"
    },
    {
        "utterance": "What's the biggest story today?",
        "intent": "question_news",
        "AMR Graph": "(S (NP (WP What)) (VP (VBZ 's) (NP (DT the) (ADJ superlative (NN story))) (ADVP (RBR today))))",
        "key_phrase": "biggest story, today",
        "slot_type": "(ordinal, biggest story), (date_time, today)",
        "pred_lf": "[IN:question_news [SL:ordinal biggest story] [SL:date_time today]]",
        "gold_lf": "[IN:GET_STORIES_NEWS [SL:NEWS_REFERENCE biggest ] [SL:NEWS_TYPE story ] [SL:DATE_TIME today ] ]"
    },
    {
        "utterance": "please record a video message for Gina and Sparks",
        "intent": "create_message_contact",
        "AMR Graph": "(S (VP (VB Please)\n      (VP (VB record)\n          (NP (DT a)\n              (NN video)\n              (NN message)\n              (PP (IN for)\n                  (NP (NNP Gina)\n                      (CC and)\n                      (NNP Sparks)))))))",
        "key_phrase": "record a video message, Gina and Sparks",
        "slot_type": "(todo, record a video message), (person_reminded, Gina and Sparks)",
        "pred_lf": "[IN:create_message_contact [SL:todo record a video message] [SL:person_reminded Gina and Sparks]]",
        "gold_lf": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT video ] [SL:RECIPIENT Gina ] [SL:RECIPIENT Sparks ] ]"
    },
    {
        "utterance": "What is the temperature going to be today?",
        "intent": "get_weather",
        "AMR Graph": "(S (NP (WP What)) (VP (VBZ is) (NP (DT the) (NN temperature)) (VP (VBG going) (PRT (TO to)) (VP (VB be) (NP (NN today))))))",
        "key_phrase": "the temperature, going to be, today",
        "slot_type": "(weather_temperature_unit, the temperature), (O, going to be), (date_time, today)",
        "pred_lf": "[IN:get_weather [SL:weather_temperature_unit the temperature] [SL:O going to be] [SL:date_time today]]",
        "gold_lf": "[IN:GET_WEATHER [SL:DATE_TIME today ] ]"
    },
    {
        "utterance": "Do you have any reminders for me?",
        "intent": "get_reminder",
        "AMR Graph": "(S (VP (VBP Do) (NP (PRP you)) (VP (VB have) (NP (DT any) (NNS reminders)) (PP (IN for) (NP (PRP me))))))",
        "key_phrase": "reminders, me",
        "slot_type": "(todo, reminders), (O, me)",
        "pred_lf": "[IN:get_reminder [SL:todo reminders] [SL:O me]]",
        "gold_lf": "[IN:GET_REMINDER [SL:PERSON_REMINDED me ] ]"
    },
    {
        "utterance": "I have a video message I need sent to my dad.",
        "intent": "send_message",
        "AMR Graph": "(S (NP (PRP I))(VP (VBP have)(NP (NP (DT a)(NN video)(NN message))(SBAR (S (NP (PRP I))(VP (VBP need)(VP (VBN sent)(PP (TO to)(NP (PRP$ my)(NN dad))))))))(. .))",
        "key_phrase": "video message, sent to my dad",
        "slot_type": "(todo, video message), (contact_related, my dad)",
        "pred_lf": "[IN:send_message [SL:todo video message] [SL:contact_related my dad]]",
        "gold_lf": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT video ] [SL:RECIPIENT my dad ] ]"
    },
    {
        "utterance": "Any celebrity news stories?",
        "intent": "question_news",
        "AMR Graph": "(S (NP (DT Any) (NN celebrity) (NNS news) (NNS stories) (? .)))",
        "key_phrase": "celebrity news stories",
        "slot_type": "(news_topic, celebrity news stories)",
        "pred_lf": "[IN: question_news [SL: news_topic celebrity news stories]]",
        "gold_lf": "[IN:GET_STORIES_NEWS [SL:NEWS_CATEGORY celebrity ] [SL:NEWS_TYPE news stories ] ]"
    },
    {
        "utterance": "put up my blink timer",
        "intent": "create_timer",
        "AMR Graph": "(S (NP (VP (V put) (P up)) (NP (DET my) (N blink timer)))))",
        "key_phrase": "put up, my blink timer",
        "slot_type": "(method_timer, put up), (timer_name, my blink timer)",
        "pred_lf": "[IN:create_timer [SL:method_timer put up] [SL:timer_name my blink timer]]",
        "gold_lf": "[IN:GET_TIMER [SL:TIMER_NAME blink ] [SL:METHOD_TIMER timer ] ]"
    },
    {
        "utterance": "how do you cook steak in a pan",
        "intent": "get_info_recipes",
        "AMR Graph": "(S (VP (ADVP (WRB how))\n    (VB do)\n    (NP (PRP you))\n    (VP (VB cook)\n        (NP (NN steak))\n        (PP (IN in)\n            (NP (DT a) (NN pan))))))",
        "key_phrase": "cook steak, in a pan",
        "slot_type": "recipes_cooking_method, cook steak\nlocation, in a pan",
        "pred_lf": "[IN:get_info_recipes [SL:recipes_cooking_method cook steak] [SL:location in a pan]]",
        "gold_lf": "[IN:GET_INFO_RECIPES [SL:RECIPES_INCLUDED_INGREDIENT steak ] ]"
    },
    {
        "utterance": "how long should i cook ribs",
        "intent": "get_details_recipes",
        "AMR Graph": "(S (SBARQ \n       (WHADVP (WRB how))\n       (SQ\n          (MD should)\n          (NP (PRP i))\n          (VP (VB cook)\n              (NP (NNS ribs)))))\n   (. ?))",
        "key_phrase": "cook ribs",
        "slot_type": "recipes_dish, cook ribs",
        "pred_lf": "[IN:get_details_recipes [SL:recipes_dish cook ribs] [SL:duration]]",
        "gold_lf": "[IN:GET_INFO_RECIPES [SL:RECIPES_ATTRIBUTE how long ] [SL:RECIPES_INCLUDED_INGREDIENT ribs ] ]"
    },
    {
        "utterance": "End my call",
        "intent": "end_call",
        "AMR Graph": "(S (VP (V end) (NP (PRP$ my) (NN call)))))",
        "key_phrase": "End, my call, call, end my call",
        "slot_type": "(O, End), (todo, end my call), (O, call), (O, my call)",
        "pred_lf": "[IN:end_call [SL:O End] [SL:todo end my call] [SL:O call] [SL:O my call]]",
        "gold_lf": "[IN:END_CALL ]"
    },
    {
        "utterance": "Savannah Georgia events for next weekend",
        "intent": "get_event",
        "AMR Graph": "(S (NP (NP (NN Savannah) (NNP Georgia)) (NNS events)) (PP (IN for) (NP (JJ next) (NN weekend))))",
        "key_phrase": "Savannah Georgia, events, next weekend",
        "slot_type": "(location, Savannah Georgia), (title_event, events), (date_time, next weekend)",
        "pred_lf": "[IN:get_event [SL:location Savannah Georgia] [SL:title_event events] [SL:date_time next weekend]]",
        "gold_lf": "[IN:GET_EVENT [SL:LOCATION Savannah Georgia ] [SL:DATE_TIME for next weekend ] ]"
    },
    {
        "utterance": "what's the temperature supposed to be tomorrow?",
        "intent": "get_weather",
        "AMR Graph": "(S (SBARQ (WHNP (what))\n          (SQ (VBP (is)\n                   (NP (DT (the))\n                       (NN (temperature))))\n              (VP (VBN (supposed)\n                      (S (VP (TO (to))\n                              (VP (VB (be))\n                                  (NP (NN (tomorrow))))))))))\n     (. (?)))",
        "key_phrase": "temperature, tomorrow",
        "slot_type": "(weather_temperature_unit, temperature), (date_time, tomorrow)",
        "pred_lf": "[IN:get_weather [SL:weather_temperature_unit temperature] [SL:date_time tomorrow]]",
        "gold_lf": "[IN:GET_WEATHER [SL:DATE_TIME tomorrow ] ]"
    },
    {
        "utterance": "Did someone just graduate from CU Denver?",
        "intent": "get_education_degree, get_education_time, get_school",
        "AMR Graph": "(S \n  (Aux Did) \n  (NP (Det someone)) \n  (AdvP just) \n  (VP (V graduate) \n    (PP (Prep from) \n      (NP (NNP CU) (NNP Denver)))))\n",
        "key_phrase": "someone, graduate, CU Denver",
        "slot_type": "(person_reminded, someone), (education_degree, graduate), (school, CU Denver)",
        "pred_lf": "[IN:get_education_degree [SL:person_reminded someone] [SL:school CU Denver]]",
        "gold_lf": "[IN:GET_CONTACT [SL:SCHOOL CU Denver ] ]"
    },
    {
        "utterance": "which whole food karen used to work at",
        "intent": "get_employment_time",
        "AMR Graph": "(ROOT\n  (SBARQ\n    (WHNP (WDT which))\n    (SQ\n      (NP\n        (ADJP (JJ whole))\n        (NN food))\n      (VP\n        (VBD karen)\n        (VP\n          (VBN used)\n          (PP (TO to)\n            (NP (VB work)\n              (PP (IN at))))))))\n    (. .)))",
        "key_phrase": "whole food, karen, used to work, at.",
        "slot_type": "(group, whole food), (person_reminded, karen), (method_retrieval_reminder, used to work), (location, at)",
        "pred_lf": "[IN:get_employment_time [SL:group whole food] [SL:person_reminded karen] [SL:method_retrieval_reminder used to work] [SL:location at]]",
        "gold_lf": "[IN:GET_EMPLOYER [SL:EMPLOYER whole food ] [SL:CONTACT karen ] ]"
    },
    {
        "utterance": "Healthy dinner recipes",
        "intent": "get_recipes",
        "AMR Graph": "(S (NP (Adjective healthy) (Noun dinner) ) (Noun recipes) )",
        "key_phrase": "healthy dinner, dinner recipes",
        "slot_type": "recipes_type_nutrition, healthy dinner\nrecipes_type, dinner recipes",
        "pred_lf": "[IN:get_recipes [SL:recipes_type_nutrition healthy dinner] [SL:recipes_type dinner recipes]]",
        "gold_lf": "[IN:GET_RECIPES [SL:RECIPES_ATTRIBUTE Healthy ] [SL:RECIPES_MEAL dinner ] ]"
    },
    {
        "utterance": "Message Jason and ask him to send a photo of his damaged car.",
        "intent": "get_message_contact",
        "AMR Graph": "(S (NP (NN Message) (NNP Jason))\n   (VP (CC and)\n       (VB ask)\n       (S (NP (PRP him))\n          (VP (TO to)\n              (VP (VB send)\n                  (NP (DT a) (NN photo))\n                  (PP (IN of)\n                      (NP (PRP$ his) (JJ damaged) (NN car))))))))",
        "key_phrase": "Message Jason, ask him to send, photo of his damaged car, his damaged car.",
        "slot_type": "(todo, Message Jason), (method_retrieval_reminder, ask him to send), (content_exact, photo of his damaged car), (content_exact, his damaged car)",
        "pred_lf": "[IN:get_message_contact [SL: todo Message Jason] [SL: method_retrieval_reminder ask him to send] [SL: content_exact photo of his damaged car] [SL: content_exact his damaged car]]",
        "gold_lf": "[IN:SEND_MESSAGE [SL:RECIPIENT Jason ] [SL:CONTENT_EXACT send a photo of his damaged car ] ]"
    },
    {
        "utterance": "What temp for the cherry pies",
        "intent": "get_temperature",
        "AMR Graph": "(S (NP (WP What)) (NP (NN temp) (PP (IN for) (NP (DT the) (JJ cherry) (NNS pies))))))",
        "key_phrase": "temperature, cherry pies",
        "slot_type": "(weather_temperature_unit, temperature), (recipes_dish, cherry pies)",
        "pred_lf": "[IN:get_temperature [SL:weather_temperature_unit temperature] [SL:recipes_dish cherry pies]]",
        "gold_lf": "[IN:GET_INFO_RECIPES [SL:RECIPES_ATTRIBUTE temp ] [SL:RECIPES_DISH cherry pies ] ]"
    },
    {
        "utterance": "Add more minutes to my timer.",
        "intent": "add_time_timer",
        "AMR Graph": "(S (VP (VB Add) (NP (QP (JJR more) (NNS minutes)) (PP (TO to) (NP (PRP$ my) (NN timer))))))",
        "key_phrase": "minutes, timer",
        "slot_type": "(method_timer, minutes), (timer_name, timer)",
        "pred_lf": "[IN:add_time_timer [SL:method_timer minutes] [SL:timer_name timer]]",
        "gold_lf": "[IN:ADD_TIME_TIMER [SL:DATE_TIME minutes ] [SL:METHOD_TIMER timer ] ]"
    },
    {
        "utterance": "What is the hottest that it will get all week?",
        "intent": "get_weather",
        "AMR Graph": "(S (SBAR (WHNP (WP What))\n          (S (VP (VBZ is)\n                 (NP (DT the) (JJS hottest)\n                     (SBAR (IN that)\n                           (S (NP (PRP it))\n                              (VP (MD will)\n                                  (VP (VB get)\n                                      (NP (DT all) (NN week)))))))))\n     (. ?)))",
        "key_phrase": "hottest, all week",
        "slot_type": "(weather_attribute, hottest), (period, all week)",
        "pred_lf": "[IN:get_weather [SL:weather_attribute hottest] [SL:period all week]]",
        "gold_lf": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE hottest ] [SL:DATE_TIME all week ] ]"
    },
    {
        "utterance": "set alarm for 7:30 am",
        "intent": "create_alarm",
        "AMR Graph": "(S (VP (VB set) (NP (NN alarm)) (PP (IN for) (NP (CD 7:30) (NN am))))))",
        "key_phrase": "set alarm, 7:30 am",
        "slot_type": "(todo, set alarm), (date_time, 7:30 am)",
        "pred_lf": "[IN:create_alarm [SL:todo set alarm] [SL:date_time 7:30 am]]",
        "gold_lf": "[IN:CREATE_ALARM [SL:DATE_TIME for 7 : 30 am ] ]"
    },
    {
        "utterance": "How much is it going to rain tomorrow?",
        "intent": "get_weather",
        "AMR Graph": "(S (SBARQ \n     (WHADVP (WRB How))\n     (SQ \n       (NP (JJ much))\n       (VP \n         (VBZ is)\n         (NP \n           (PRP it))\n         (VP \n           (VBG going)\n           (S\n             (VP \n               (TO to)\n               (VP \n                 (VB rain)\n                 (NP \n                   (NN tomorrow))))))))))",
        "key_phrase": "it, rain, tomorrow",
        "slot_type": "(O, it), (attribute_event, rain), (date_time, tomorrow)",
        "pred_lf": "[IN:get_weather [SL:O it] [SL:attribute_event rain] [SL:date_time tomorrow]]",
        "gold_lf": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME tomorrow ] ]"
    },
    {
        "utterance": "start music on pandora",
        "intent": "play_music",
        "AMR Graph": "(S (VP (VB start) (NP (NN music) (PP (IN on) (NP (NNP pandora))))))",
        "key_phrase": "start music, pandora",
        "slot_type": "(music_type, music), (music_provider_name, pandora)",
        "pred_lf": "[IN:play_music [SL:music_type music] [SL:music_provider_name pandora]]",
        "gold_lf": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE music ] [SL:MUSIC_PROVIDER_NAME pandora ] ]"
    },
    {
        "utterance": "when are the next elections",
        "intent": "get_event",
        "AMR Graph": "(S (SBAR (WHADVP (WRB when)) (S (VP (VBP are) (NP (DT the) (JJ next) (NNS elections))))))",
        "key_phrase": "elections, next elections",
        "slot_type": "(title_event, elections), (title_event, next elections)",
        "pred_lf": "[IN:get_event [SL:title_event elections] [SL:title_event next elections]]",
        "gold_lf": "[IN:QUESTION_NEWS [SL:NEWS_REFERENCE next ] [SL:NEWS_TOPIC elections ] ]"
    },
    {
        "utterance": "Find me the latest Linkin Park album",
        "intent": "get_track_info_music",
        "AMR Graph": "(S (VP (VB Find) (NP (PRP me)) (NP (DT the) (JJS latest) (NN Linkin) (NN Park) (NN album)))))",
        "key_phrase": "latest Linkin Park album",
        "slot_type": "(music_artist_name, Linkin Park), (music_album_title, latest album)",
        "pred_lf": "[IN:get_track_info_music [SL:music_artist_name Linkin Park] [SL:music_album_title latest album]]",
        "gold_lf": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME Linkin Park ] [SL:MUSIC_TYPE album ] ]"
    },
    {
        "utterance": "Easy salad recipes",
        "intent": "get_recipes",
        "AMR Graph": "(S (NP (JJ Easy) (NNS salad)) (NNS recipes))",
        "key_phrase": "Easy salad recipes, salad recipes",
        "slot_type": "(recipes_type, Easy salad recipes), (recipes_dish, salad recipes)",
        "pred_lf": "[IN:get_recipes [SL:recipes_type Easy salad recipes] [SL:recipes_dish salad recipes]]",
        "gold_lf": "[IN:GET_RECIPES [SL:RECIPES_ATTRIBUTE Easy ] [SL:RECIPES_DISH salad ] ]"
    },
    {
        "utterance": "call India Cortez and Vivian Hamilton",
        "intent": "create_call",
        "AMR Graph": "(S (VP (VB call) (NP (NP (NNP India) (NNP Cortez)) (CC and) (NP (NNP Vivian) (NNP Hamilton))))))",
        "key_phrase": "call India Cortez, \ncall Vivian Hamilton, \nIndia Cortez, \nVivian Hamilton",
        "slot_type": "(phone_number, India Cortez), (phone_number, Vivian Hamilton), (type_relation, call)",
        "pred_lf": "[IN:create_call [SL:phone_number India Cortez] [SL:phone_number Vivian Hamilton] [SL:type_relation call]]",
        "gold_lf": "[IN:CREATE_CALL [SL:CONTACT India Cortez ] [SL:CONTACT Vivian Hamilton ] ]"
    },
    {
        "utterance": "Where does Paula Carlton work?",
        "intent": "get_employer",
        "AMR Graph": "(S \n   (WHADVP (WRB Where)) \n   (VBZ does) \n   (NP \n      (NNP Paula) \n      (NNP Carlton)) \n   (VP \n      (VB work)) \n   (. ?))",
        "key_phrase": "Paula Carlton, work, where",
        "slot_type": "(person_reminded, Paula Carlton), (job, work), (location, where)",
        "pred_lf": "[IN:get_employer [SL:person_reminded Paula Carlton] [SL:job work] [SL:location where]]",
        "gold_lf": "[IN:GET_EMPLOYER [SL:CONTACT Paula Carlton ] ]"
    },
    {
        "utterance": "Will there be a lot of rain this weekend?",
        "intent": "get_weather",
        "AMR Graph": "(S (VP (MD Will) (NP (EX there)) (VP (VB be) (NP (DT a) (NN lot)) (PP (IN of) (NP (NN rain)))) (NP (DT this) (NN weekend))) (PUNC ?))",
        "key_phrase": "lot of rain, this weekend",
        "slot_type": "(weather_attribute, lot of rain), (date_time, this weekend)",
        "pred_lf": "[IN:get_weather [SL:weather_attribute lot of rain] [SL:date_time this weekend]]",
        "gold_lf": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME this weekend ] ]"
    },
    {
        "utterance": "set an alarm for one hour",
        "intent": "create_alarm",
        "AMR Graph": "(S (VP (VB set) (NP (DT an)) (NP (NN alarm))) (PP (IN for) (NP (CD one) (NN hour)))))",
        "key_phrase": "set an alarm, for one hour",
        "slot_type": "(method_timer, set an alarm), (period, one hour)",
        "pred_lf": "[IN:create_alarm [SL:method_timer set an alarm] [SL:period one hour]]",
        "gold_lf": "[IN:CREATE_ALARM [SL:DATE_TIME for one hour ] ]"
    },
    {
        "utterance": "Give me news regarding the Senate Russia hearings.",
        "intent": "question_news",
        "AMR Graph": "(S (VP (VB Give) (NP (PRP me)) (NP (NN news) (PP (IN regarding) (NP (DT the) (NNP Senate) (NNP Russia) (NNS hearings)))))))",
        "key_phrase": "news, Senate Russia hearings",
        "slot_type": "(type_content, news), (news_topic, Senate Russia hearings)",
        "pred_lf": "[IN:question_news [SL:type_content news] [SL:news_topic Senate Russia hearings]]",
        "gold_lf": "[IN:GET_STORIES_NEWS [SL:NEWS_TYPE news ] [SL:NEWS_TOPIC Senate Russia hearings ] ]"
    },
    {
        "utterance": "Is there lightning reported in the current thunderstorm?",
        "intent": "get_weather",
        "AMR Graph": "(S\n   (SQ\n      (VBZ Is)\n      (NP (EX there))\n      (NP (NN lightning))\n      (VP\n         (VBN reported)\n         (PP\n            (IN in)\n            (NP\n               (DT the)\n               (JJ current)\n               (NN thunderstorm)))) \n      (? .)))",
        "key_phrase": "lightning, thunderstorm, current thunderstorm",
        "slot_type": "weather_attribute, lightning\nweather_type, thunderstorm\nlocation, current thunderstorm",
        "pred_lf": "[IN:get_weather [SL:weather_attribute lightning] [SL:weather_type thunderstorm] [SL:location current thunderstorm]]",
        "gold_lf": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE lightning ] [SL:WEATHER_ATTRIBUTE thunderstorm ] ]"
    },
    {
        "utterance": "Ask Ryan if he wants to go to an FSU football game this fall.",
        "intent": "get_event",
        "AMR Graph": "(S (SBAR\n      (S\n        (VP (VB Ask)\n          (NP (NNP Ryan)))\n        (SBAR\n          (IN if)\n          (S\n            (NP (PRP he))\n            (VP (VBZ wants)\n              (S\n                (VP (TO to)\n                  (VP (VB go)\n                    (PP (TO to)\n                      (NP (DT an) (NN FSU) (NN football) (NN game)\n                        (NP (DT this) (NN fall))))))))))))))",
        "key_phrase": "Ryan, FSU football game, fall.",
        "slot_type": "(person_reminded, Ryan), (title_event, FSU football game), (period, fall)",
        "pred_lf": "[IN:get_event [SL:person_reminded Ryan] [SL:title_event FSU football game] [SL:period fall]]",
        "gold_lf": "[IN:SEND_MESSAGE [SL:RECIPIENT Ryan ] [SL:CONTENT_EXACT he wants to go to an FSU football game this fall ] ]"
    },
    {
        "utterance": "Cancel my reminder for juice.",
        "intent": "delete_reminder",
        "AMR Graph": "(S (VP (VB Cancel) (NP (PRP$ my) (NN reminder) (PP (IN for) (NN juice)))) (. .))",
        "key_phrase": "reminder, cancel, juice",
        "slot_type": "(method_retrieval_reminder, reminder), (O, cancel), (recipes_included_ingredient, juice)",
        "pred_lf": "[IN:delete_reminder [SL:method_retrieval_reminder reminder] [SL:O cancel] [SL:recipes_included_ingredient juice]]",
        "gold_lf": "[IN:DELETE_REMINDER [SL:PERSON_REMINDED my ] [SL:TODO juice ] ]"
    },
    {
        "utterance": "how to make pancakes from scratch",
        "intent": "get_recipes",
        "AMR Graph": "(S (NP (WRB how))\n   (VP (TO to)\n       (VP (VB make)\n           (NP (NNS pancakes))\n           (PP (IN from)\n               (NP (NN scratch))))))",
        "key_phrase": "make pancakes, from scratch",
        "slot_type": "recipes_dish, pancakes \nrecipes_cooking_method, from scratch",
        "pred_lf": "[IN:get_recipes [SL:recipes_dish pancakes] [SL:recipes_cooking_method from scratch]]",
        "gold_lf": "[IN:GET_RECIPES [SL:RECIPES_DISH pancakes ] [SL:RECIPES_COOKING_METHOD from scratch ] ]"
    },
    {
        "utterance": "delete the wedding reminder for sunday",
        "intent": "delete_reminder",
        "AMR Graph": "(S \n  (VP \n    (Verb delete) \n    (NP \n      (DT the) \n      (NN wedding) \n      (NN reminder)) \n    (PP \n      (IN for) \n      (NP \n        (NNP Sunday)))))\n        \nExplanation: \n- The main clause is a VP (verb phrase) with the verb \"delete\" as its head.\n- The NP (noun phrase) \"the wedding reminder\" is the direct object of the verb \"delete\".\n- The prepositional phrase (PP) \"for Sunday\" modifies the noun phrase \"wedding reminder\" and is attached to it as its complement.\n- The determiner \"the\" (DT) modifies the noun phrases \"wedding\" and \"reminder\".\n- \"Sunday\" is tagged as a proper noun (NNP) and is a named entity.",
        "key_phrase": "wedding reminder, Sunday",
        "slot_type": "(todo, wedding reminder), (date_time, Sunday)",
        "pred_lf": "[IN: delete_reminder [SL: todo wedding reminder] [SL: date_time Sunday]]",
        "gold_lf": "[IN:DELETE_REMINDER [SL:TODO wedding ] [SL:DATE_TIME for sunday ] ]"
    },
    {
        "utterance": "show me who is available please",
        "intent": "get_availability",
        "AMR Graph": "(S (VP (VB show)(NP (PRP me))(SBAR (WHNP (WP who))(S (VP (VBZ is)(ADJP (JJ available))))))(please))",
        "key_phrase": "me, who, available",
        "slot_type": "(O, me), (O, who), (group, available)",
        "pred_lf": "[IN:get_availability [SL:O me] [SL:O who] [SL:group available]]",
        "gold_lf": "[IN:GET_AVAILABILITY ]"
    },
    {
        "utterance": "Turn on the radio please",
        "intent": "play_media",
        "AMR Graph": "(S (VP (VB Turn) (PRT (RP on)) (NP (DT the) (NN radio))) (ADVP (RB please)))",
        "key_phrase": "Turn on, the radio, please",
        "slot_type": "(None, Turn on), (music_radio_id, the radio), (None, please)",
        "pred_lf": "[IN:play_media [SL:action Turn on] [SL:media_type music_radio_id] [SL:object the radio] [SL:request please]]",
        "gold_lf": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE radio ] ]"
    },
    {
        "utterance": "let's start recording a video message for Nobuko Falconeri",
        "intent": "create_reminder",
        "AMR Graph": "(S (VP (VB Let)\n      (VP (VBZ 's)\n          (VP (VB start)\n              (S (VP (VBG recording)\n                      (NP (DT a)\n                          (NN video)\n                          (NN message))\n                      (PP (IN for)\n                          (NP (NNP Nobuko)\n                              (NNP Falconeri))))))))))",
        "key_phrase": "recording a video message, Nobuko Falconeri",
        "slot_type": "(method_recipes, recording a video message), (person_reminded, Nobuko Falconeri)",
        "pred_lf": "[IN:create_reminder [SL:method_recipes recording a video message] [SL:person_reminded Nobuko Falconeri]]",
        "gold_lf": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT video ] [SL:RECIPIENT Nobuko Falconeri ] ]"
    },
    {
        "utterance": "Play Eminem's newest hit",
        "intent": "play_music",
        "AMR Graph": "(S (VP (VB Play) (NP (NP (NNP Eminem)) (POS 's) (ADJP (JJS newest)) (NN hit))))",
        "key_phrase": "Eminem's newest hit, newest hit, Eminem's hit, Eminem's newest",
        "slot_type": "(music_artist_name, Eminem), (music_track_title, newest hit)",
        "pred_lf": "[IN:play_music [SL:music_artist_name Eminem] [SL:music_track_title newest hit]]",
        "gold_lf": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME Eminem ] [SL:MUSIC_TYPE hit ] ]"
    },
    {
        "utterance": "Message Riley to say I am going to be late",
        "intent": "send_message",
        "AMR Graph": "(S (NP (NP (NN Message) (NNP Riley)) (S (VP (TO to) (VP (VB say) (SBAR (S (NP (PRP I)) (VP (VBP am) (VP (VBG going) (PP (TO to) (VP (VB be) (ADJP (JJ late)))))))))))))",
        "key_phrase": "Message Riley, I, be late.",
        "slot_type": "(todo, Message Riley), (O, I), (attribute_event, be late)",
        "pred_lf": "[IN: send_message [SL: todo Message Riley] [SL: O I] [SL: attribute_event be late]]",
        "gold_lf": "[IN:SEND_MESSAGE [SL:RECIPIENT Riley ] [SL:CONTENT_EXACT I am going to be late ] ]"
    },
    {
        "utterance": "What's happening in Dallas",
        "intent": "question_news",
        "AMR Graph": "(S (NP (WDT What))(VP (VBZ's happening)(PP (IN in) (NP (NNP Dallas)))))",
        "key_phrase": "What's happening, Dallas",
        "slot_type": "(title_event, What's happening), (location, Dallas)",
        "pred_lf": "[IN:question_news [SL:title_event What's happening] [SL:location Dallas]]",
        "gold_lf": "[IN:GET_EVENT [SL:LOCATION Dallas ] ]"
    },
    {
        "utterance": "Update reminder for today's staff meeting from 1 pm to 2 pm.",
        "intent": "update_reminder_date_time",
        "AMR Graph": "(S\n  (VP (VB Update)\n    (NP (NN reminder)\n      (PP (IN for)\n        (NP (NP (NN today's))\n          (NP (NN staff) (NN meeting)))))\n    (PP (IN from)\n      (NP (CD 1) (NN pm))\n      (PP (TO to)\n        (NP (CD 2) (NN pm))))))\n  (. .)))",
        "key_phrase": "reminder, staff meeting, today's, 1 pm, 2 pm.",
        "slot_type": "(todo, reminder), (title_event, staff meeting), (date_time, today's), (date_time, 1 pm), (date_time, 2 pm)",
        "pred_lf": "[IN:update_reminder_date_time [SL:todo reminder] [SL:title_event staff meeting] [SL:date_time today's] [SL:date_time 1 pm] [SL:date_time 2 pm]]",
        "gold_lf": "[IN:UPDATE_REMINDER_DATE_TIME [SL:TODO today 's staff meeting ] [SL:DATE_TIME 1 pm ] [SL:DATE_TIME 2 pm ] ]"
    },
    {
        "utterance": "Remind me to get tacos for dinner",
        "intent": "create_reminder",
        "AMR Graph": "(S (NP (Noun Remind))\n   (VP (Verb me)\n       (S (VP (Verb to)\n              (VP (Verb get)\n                  (NP (Noun tacos))\n                  (PP (Prep for)\n                      (NP (Noun dinner))))))))",
        "key_phrase": "Remind me, get tacos, for dinner",
        "slot_type": "(todo, Remind me), (recipes_dish, tacos), (recipes_meal, dinner)",
        "pred_lf": "[IN:create_reminder [SL:todo Remind me] [SL:recipes_dish tacos] [SL:recipes_meal dinner]]",
        "gold_lf": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED me ] [SL:TODO get tacos for dinner ] ]"
    },
    {
        "utterance": "Start the timer at 8:30",
        "intent": "create_timer",
        "AMR Graph": "(S (NP (VB Start) (DT the) (NN timer)) (PP (IN at) (NP (CD 8:30)))))",
        "key_phrase": "Start the timer, the timer, at 8:30",
        "slot_type": "(method_timer, Start the timer), (method_timer, the timer), (date_time, at 8:30)",
        "pred_lf": "[IN:create_timer [SL:method_timer Start the timer] [SL:method_timer the timer] [SL:date_time at 8:30]]",
        "gold_lf": "[IN:CREATE_TIMER [SL:METHOD_TIMER timer ] [SL:DATE_TIME at 8 : 30 ] ]"
    },
    {
        "utterance": "How many calories are in a Big Mac from McDonald's",
        "intent": "get_info_recipes",
        "AMR Graph": "(S (SBARQ \n    (WHADVP (WRB How))\n    (SQ \n      (VBZ many)\n      (NNS calories)\n      (VBP are)\n      (PP (IN in)\n          (NP \n            (DT a)\n            (JJ Big)\n            (NNP Mac)\n            (PP (IN from)\n                (NP (NNP McDonald's))))))))\n                \nExplanation: \n- The sentence is a question (SBARQ).\n- The question word is \"How\" (WHADVP).\n- The main clause of the sentence is the subject-verb-object construction \"calories are in Big Mac\" (SQ).\n- \"How many calories\" is the subject of the sentence.\n- \"are\" is the main verb of the sentence.\n- \"in a Big Mac from McDonald's\" is a prepositional phrase (PP) modifying \"calories\".\n- \"a Big Mac\" is a noun phrase (NP) consisting of a determiner (\"a\") and a proper noun (\"Big Mac\").\n- \"from McDonald's\" is a prepositional phrase (PP) modifying \"Big Mac\".",
        "key_phrase": "calories, Big Mac, McDonald's",
        "slot_type": "(recipes_unit_nutrition, calories), (recipes_dish, Big Mac), (recipes_source, McDonald's)",
        "pred_lf": "[IN:get_info_recipes [SL:recipes_unit_nutrition calories] [SL:recipes_dish Big Mac] [SL:recipes_source McDonald's]]",
        "gold_lf": "[IN:GET_INFO_RECIPES [SL:RECIPES_UNIT_NUTRITION calories ] [SL:RECIPES_DISH Big Mac ] ]"
    },
    {
        "utterance": "What is the correct temperature for medium rare steak",
        "intent": "question_food",
        "AMR Graph": "(S (SBAR (WHNP (What)) (S (VP (VBZ is) (NP (DT the) (JJ correct) (NN temperature) (PP (IN for) (NP (JJ medium) (JJ rare) (NN steak)))))) (. ?)))",
        "key_phrase": "correct temperature, medium rare steak",
        "slot_type": "(weather_temperature_unit, correct temperature), (recipes_meal, medium rare steak)",
        "pred_lf": "[IN:question_food [SL:weather_temperature_unit correct temperature] [SL:recipes_meal medium rare steak]]",
        "gold_lf": "[IN:GET_INFO_RECIPES [SL:RECIPES_ATTRIBUTE temperature ] [SL:RECIPES_ATTRIBUTE medium rare ] [SL:RECIPES_DISH steak ] ]"
    },
    {
        "utterance": "where does ali live?",
        "intent": "get_location",
        "AMR Graph": "(S (SBAR (WHADVP (WRB where)) (S (VP (VBZ does) (NP (NNP ali)) (VP (VB live)))) (? .)))",
        "key_phrase": "ali, live",
        "slot_type": "(person_reminded, ali), (location, live)",
        "pred_lf": "[IN:get_location [SL:person_reminded ali] [SL:location live]]",
        "gold_lf": "[IN:GET_LOCATION [SL:CONTACT ali ] ]"
    },
    {
        "utterance": "make a call to Xander Brown's mom",
        "intent": "create_call",
        "AMR Graph": "(S (VP (VB make) (NP (DT a) (NN call) (PP (TO to) (NP (NP (NNP Xander) (NNP Brown)) (POS 's)) (NN mom))))))",
        "key_phrase": "make, call, Xander Brown's mom",
        "slot_type": "(type_contact, Xander Brown's mom), (method_recipes, make), (contact_method, call)",
        "pred_lf": "[IN:create_call [SL:type_contact Xander Brown's mom] [SL:method_recipes make] [SL:contact_method call]]",
        "gold_lf": "[IN:CREATE_CALL [SL:CONTACT Xander Brown 's mom ] ]"
    },
    {
        "utterance": "remind me about dinner tonight at 5",
        "intent": "create_reminder",
        "AMR Graph": "(S (VP (VB remind)\n      (NP (PRP me))\n      (PP (IN about)\n          (NP (NP (NN dinner))\n              (NP (NN tonight))\n              (PP (IN at)\n                  (NP (CD 5)))))))",
        "key_phrase": "dinner tonight, at 5",
        "slot_type": "todo, dinner tonight\ndate_time, 5",
        "pred_lf": "[IN:create_reminder [SL:todo dinner tonight] [SL:date_time 5]]",
        "gold_lf": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED me ] [SL:TODO dinner ] [SL:DATE_TIME tonight at 5 ] ]"
    },
    {
        "utterance": "Find me a recipe for curry chicken",
        "intent": "get_recipes",
        "AMR Graph": "(S (VP (VB Find) (NP (PRP me)) (NP (NP (DT a) (NN recipe)) (PP (IN for) (NP (NN curry) (NN chicken))))))",
        "key_phrase": "recipe, curry chicken",
        "slot_type": "(recipes_dish, curry chicken), (recipes_type, recipe)",
        "pred_lf": "[IN:get_recipes [SL:recipes_dish curry chicken] [SL:recipes_type recipe]]",
        "gold_lf": "[IN:GET_RECIPES [SL:RECIPES_DISH curry chicken ] ]"
    },
    {
        "utterance": "theater events in los angeles this week",
        "intent": "get_event",
        "AMR Graph": "(S (NP (N theater) (N events) (PP (P in) (NP (NP (N Los Angeles)) (NP (D this) (N week))))))",
        "key_phrase": "theater events, los angeles, this week",
        "slot_type": "category_event, theater events\nlocation, los angeles\ndate_time, this week",
        "pred_lf": "[IN:get_event [SL:category_event theater events] [SL:location los angeles] [SL:date_time this week]]",
        "gold_lf": "[IN:GET_EVENT [SL:CATEGORY_EVENT theater ] [SL:LOCATION los angeles ] [SL:DATE_TIME this week ] ]"
    },
    {
        "utterance": "What do I need to make a chicken noodle soup",
        "intent": "get_info_recipes",
        "AMR Graph": "(S (NP (WP What))\n    (VP (VBP do)\n        (NP (PRP I))\n        (VP (VB need)\n            (S (TO to)\n                (VP (VB make)\n                    (NP (DT a)\n                        (JJ chicken)\n                        (NN noodle)\n                        (NN soup)))))))",
        "key_phrase": "chicken noodle soup, I, need, make",
        "slot_type": "(recipes_dish, chicken noodle soup), (O, I), (method_recipes, make), (O, need)",
        "pred_lf": "[IN:get_info_recipes [SL:recipes_dish chicken noodle soup] [SL:method_recipes make] [SL:O I] [SL:O need]]",
        "gold_lf": "[IN:GET_INFO_RECIPES [SL:RECIPES_DISH chicken noodle soup ] ]"
    },
    {
        "utterance": "What is the temperature in London?",
        "intent": "get_weather",
        "AMR Graph": "(S \n    (NP (WDT What)) \n    (VP (VBZ is) \n        (NP (DT the) (NN temperature) \n            (PP (IN in) (NNP London)))) \n    (. ?))",
        "key_phrase": "temperature, London",
        "slot_type": "(weather_temperature_unit, temperature), (location, London)",
        "pred_lf": "[IN:get_weather [SL:weather_temperature_unit temperature] [SL:location London]]",
        "gold_lf": "[IN:GET_WEATHER [SL:LOCATION London ] ]"
    },
    {
        "utterance": "Play a bunch of songs from musicals, please.",
        "intent": "play_music",
        "AMR Graph": "(S \n   (VP \n      (VB Play) \n      (NP \n         (DT a) \n         (NN bunch) \n         (PP \n            (IN of) \n            (NP \n               (NNS songs) \n               (PP \n                  (IN from) \n                  (NP (NNS musicals))))))) \n   (, ,) \n   (UH please) \n   (. .))",
        "key_phrase": "songs, musicals",
        "slot_type": "(music_type, songs), (music_genre, musicals)",
        "pred_lf": "[IN:play_music [SL:music_type songs] [SL:music_genre musicals]]",
        "gold_lf": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE songs ] ]"
    },
    {
        "utterance": "Have Janie and Kyle Coleman messaged me today",
        "intent": "get_message_contact",
        "AMR Graph": "(S\n   (VP\n      (VB Have)\n      (NP\n         (NP (NNP Janie))\n         (CC and)\n         (NP (NNP Kyle) (NNP Coleman)))\n      )\n      (VP\n         (VBN messaged)\n         (NP (PRP me))\n         (ADVP (RB today))\n      )\n   )\n)",
        "key_phrase": "Janie, Kyle Coleman, me, today, messaged me today",
        "slot_type": "attendee, Janie\nattendee, Kyle Coleman\nO, me\ndate_time, today\nmethod_recipes, messaged me today",
        "pred_lf": "[IN:get_message_contact [SL:attendee Janie] [SL:attendee Kyle Coleman] [SL:O me] [SL:date_time today] [SL:method_recipes messaged me today]]",
        "gold_lf": "[IN:GET_MESSAGE [SL:SENDER Janie ] [SL:SENDER Kyle Coleman ] [SL:RECIPIENT me ] [SL:DATE_TIME today ] ]"
    }
]